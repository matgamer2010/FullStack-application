BACKLOG 15/4:

## Backend

  * Status: Done!
  * Obs: pode até não ser relevante, mas eu adicionei um "/" ao final da url da API
  - Parte do Django:
    - Instalar a Lib,
    - Configurar settings para aceitar JWT como forma de autenticação,
    - Depois, criar urls protegidas para esses tokens.
    - Criar um usuário normal, com o Django, chamado NodeJs, através dele, 
    faremos o request da API (Temos que definir a ele uma permissão especial, para que apenas ele possa fazer a requisição)
--> Fazer Commit

  - Por fim, vem a parte do Node.js, onde fazemos o envio do Token:
      - Consumismo a URL da API (por enquanto, a localhost)
      - Definimos o cabeçalho da requição (User e password)
      - Definimos funções para a requisição em si.

  - Lista de eventos necessários para o WebSocket:
    - Submit do form
    - Integrar cachê para armazenamento de requisições (Prisma e Redis), e integrar Buffers para acelerar a requisição
    - Preparar para a comunicação com o ChatBot.

  - Criar WebSockets para a avaliação de produtos.

  - Fazer testes automatizados:

## Frontend

  - Criar a página de cada produto (Com base no Id). 
    - Lembrar de fazer a seção de descrição de cada Produto.

## Backend

  - Com a camada de websockets ligada, devemos refatorar: users/views.py, e as urls, já que não serão mais necessárias.

  - Configurar pagamentos com o Stripe e gerenciar estoque.

  - Implementar um ChatBot para auxílio do cliente.

  - Testes automatizados



## Extras:

  - Colocar os Direitos autorais no Header (Criar uma página só para isso):

    Até agora, a lista é:

    - Banner da Homepage
    - A imagem de usuário Default

  - Marketing do projeto.

## Desenvolvimento do Mobile com React Native.